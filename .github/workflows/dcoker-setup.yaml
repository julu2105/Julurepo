name: 13-docker-setup

on: 
  workflow_dispatch


jobs:
  docker:
    runs-on: ubuntu-latest
    steps:
      - name: Manually setting up docker
        run: |
          sudo apt-get update
          sudo apt-get install ca-certificates curl
          sudo install -m 0755 -d /etc/apt/keyrings
          sudo curl -fsSL https://download.docker.com/linux/ubuntu/gpg -o /etc/apt/keyrings/docker.asc
          sudo chmod a+r /etc/apt/keyrings/docker.asc
          echo \
            "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.asc] https://download.docker.com/linux/ubuntu \
            $(. /etc/os-release && echo "${UBUNTU_CODENAME:-$VERSION_CODENAME}") stable" | \
            sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
          sudo apt-get update

      - name: avialable docker ver
        run: |
          apt-cache madison docker-ce | awk '{ print $3 }'
          VERSION_STRING=5:28.0.4-1~ubuntu.24.04~noble
          sudo apt-get install docker-ce=$VERSION_STRING docker-ce-cli=$VERSION_STRING containerd.io docker-buildx-plugin docker-compose-plugin
      - name: Run docker 
        run: |  
          docker --version
          sudo docker run hello-world
      - name: Create Docker Group and add user and run command using non sudo
        run: |  
          echo $USER
          sudo usermod -aG docker $USER
          docker run hello-world
      - name: Install nginx
        run: |
          docker pull nginx:1.27.0
          docker images
          docker run -d -p 8080:80 --name web_server nginx:1.27.0
          docker ps -q
          docker ps --filter name=web_server
          docker exec  web_server apt-get update
          docker exec  web_server apt-get -y install vim
          docker exec  web_server cat /usr/share/nginx/html/index.html
      - name: curl into local Host
        run: |
          curl http://localHost:8080
          docker login -u ${{ secrets.USR_DCK }} -p ${ secrets.DOCKER_PAT }}
          docker search ubuntu
          docker images
          docker rmi $(docker images -q)
          docker pull --a hello-world
          docker images
          docker run hello-world
          docker pull ubuntu:latest
          echo "FROM ubuntu:latest" >> Dockerfile
          echo 'CMD ["echo", "This is my first docker image"]' >> Dockerfile
          docker build -t v1_Hello_World .
          docker images

          
